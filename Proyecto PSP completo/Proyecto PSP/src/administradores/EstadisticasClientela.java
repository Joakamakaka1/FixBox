/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package administradores;

import conexion.ConectarBD;
import java.awt.Color;
import java.awt.Cursor;
import java.awt.Graphics;
import java.awt.Image;
import java.awt.Toolkit;
import java.sql.Connection;
import java.sql.*;

/**
 *
 * @author Hugo
 */
public class EstadisticasClientela extends javax.swing.JFrame {

    /**
     * Creates new form EstadisticasClientela
     */
    public EstadisticasClientela() {
        initComponents();
        this.setLocationRelativeTo(null);
        this.setResizable(false);

        //RANGO DE CLIENTELA POR MES
        try {
            Connection cn = ConectarBD.conectar();
            
            String enero = "SELECT COUNT(*) AS num_clientes FROM CLIENTES WHERE MONTH(FechaRegistro) = 1";
            String febrero = "SELECT COUNT(*) AS num_clientes FROM CLIENTES WHERE MONTH(FechaRegistro) = 2";
            String marzo = "SELECT COUNT(*) AS num_clientes FROM CLIENTES WHERE MONTH(FechaRegistro) = 3";
            String abril = "SELECT COUNT(*) AS num_clientes FROM CLIENTES WHERE MONTH(FechaRegistro) = 4";
            String mayo = "SELECT COUNT(*) AS num_clientes FROM CLIENTES WHERE MONTH(FechaRegistro) = 5";
            String junio = "SELECT COUNT(*) AS num_clientes FROM CLIENTES WHERE MONTH(FechaRegistro) = 6";
            String julio = "SELECT COUNT(*) AS num_clientes FROM CLIENTES WHERE MONTH(FechaRegistro) = 7";
            String agosto = "SELECT COUNT(*) AS num_clientes FROM CLIENTES WHERE MONTH(FechaRegistro) = 8";
            String septiembre = "SELECT COUNT(*) AS num_clientes FROM CLIENTES WHERE MONTH(FechaRegistro) = 9";
            String octubre = "SELECT COUNT(*) AS num_clientes FROM CLIENTES WHERE MONTH(FechaRegistro) = 10";
            String noviembre = "SELECT COUNT(*) AS num_clientes FROM CLIENTES WHERE MONTH(FechaRegistro) = 11";
            String diciembre = "SELECT COUNT(*) AS num_clientes FROM CLIENTES WHERE MONTH(FechaRegistro) = 12";
            
            PreparedStatement psEnero = cn.prepareStatement(enero);
            PreparedStatement psFebrero = cn.prepareStatement(febrero);
            PreparedStatement psMarzo = cn.prepareStatement(marzo);
            PreparedStatement psAbril = cn.prepareStatement(abril);
            PreparedStatement psMayo = cn.prepareStatement(mayo);
            PreparedStatement psJunio = cn.prepareStatement(junio);
            PreparedStatement psJulio = cn.prepareStatement(julio);
            PreparedStatement psAgosto = cn.prepareStatement(agosto);
            PreparedStatement psSeptiembre = cn.prepareStatement(septiembre);
            PreparedStatement psOctubre = cn.prepareStatement(octubre);
            PreparedStatement psNoviembre = cn.prepareStatement(noviembre);
            PreparedStatement psDiciembre = cn.prepareStatement(diciembre);
            
            ResultSet rsEnero = psEnero.executeQuery();
        
            
            while (rsEnero.next()) {
                reincidentes = rsEnero.getInt(1);
            }
            
         
           
            //RANGO DE CLIENTELA REINCIDENTE
            String consultaReincidentes = "SELECT COUNT(*) FROM (SELECT c.ID_CLIENTES FROM CLIENTES AS c INNER JOIN INCIDENCIAS AS i ON c.ID_CLIENTES = i.ID_CLIENTES GROUP BY c.ID_CLIENTES HAVING COUNT(i.ID_INCIDENCIAS) > 1) AS reincidentes";
            String consultaNoReincidentes = "SELECT COUNT(*) FROM (SELECT c.ID_CLIENTES FROM CLIENTES AS c INNER JOIN INCIDENCIAS AS i ON c.ID_CLIENTES = i.ID_CLIENTES GROUP BY c.ID_CLIENTES HAVING COUNT(i.ID_INCIDENCIAS) = 1) AS no_reincidentes";
            PreparedStatement ps2 = cn.prepareStatement(consultaReincidentes);
            PreparedStatement ps3 = cn.prepareStatement(consultaNoReincidentes);
            ResultSet rs2 = ps2.executeQuery();
            ResultSet rs3 = ps3.executeQuery();
            
            while (rs2.next()) {
                reincidentes = rs2.getInt(1);
            }
            while (rs3.next()) {
                noReincidentes = rs3.getInt(1);
            }
            
        
            
            repaint();

        } catch (SQLException e) {
            e.printStackTrace();
        }
    setIconImage(getIconImage());
    }
    @Override
    public Image getIconImage(){
        Image icono = Toolkit.getDefaultToolkit().getImage(ClassLoader.getSystemResource("./iconimages/images.jpg"));
        return icono;
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        PanelFondo = new javax.swing.JPanel();
        textClientela = new javax.swing.JLabel();
        txtVolverAtras = new javax.swing.JLabel();
        btnVolverAtras = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        PanelFondo.setBackground(new java.awt.Color(219, 219, 209));
        PanelFondo.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        textClientela.setBackground(new java.awt.Color(0, 0, 0));
        textClientela.setFont(new java.awt.Font("Arial", 1, 30)); // NOI18N
        textClientela.setText("Estadísticas Clientela");
        PanelFondo.add(textClientela, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 30, -1, -1));

        txtVolverAtras.setFont(new java.awt.Font("Arial", 0, 20)); // NOI18N
        txtVolverAtras.setText("Volver atrás");
        PanelFondo.add(txtVolverAtras, new org.netbeans.lib.awtextra.AbsoluteConstraints(100, 750, -1, 40));

        btnVolverAtras.setIcon(new javax.swing.ImageIcon(getClass().getResource("/iconimages/iconatras.png"))); // NOI18N
        btnVolverAtras.setContentAreaFilled(false);
        btnVolverAtras.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
        btnVolverAtras.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                btnVolverAtrasMouseClicked(evt);
            }
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                btnVolverAtrasMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                btnVolverAtrasMouseExited(evt);
            }
        });
        btnVolverAtras.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnVolverAtrasActionPerformed(evt);
            }
        });
        PanelFondo.add(btnVolverAtras, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 730, 90, 80));

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(PanelFondo, javax.swing.GroupLayout.DEFAULT_SIZE, 1440, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(PanelFondo, javax.swing.GroupLayout.DEFAULT_SIZE, 830, Short.MAX_VALUE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btnVolverAtrasMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btnVolverAtrasMouseClicked
        PanelEstadisticas ppa = new PanelEstadisticas();
        ppa.setVisible(true);
        this.dispose();
    }//GEN-LAST:event_btnVolverAtrasMouseClicked

    private void btnVolverAtrasMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btnVolverAtrasMouseEntered
        setCursor(new Cursor(Cursor.HAND_CURSOR));
    }//GEN-LAST:event_btnVolverAtrasMouseEntered

    private void btnVolverAtrasMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btnVolverAtrasMouseExited
        setCursor(new Cursor(Cursor.DEFAULT_CURSOR));
    }//GEN-LAST:event_btnVolverAtrasMouseExited

    private void btnVolverAtrasActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnVolverAtrasActionPerformed

    }//GEN-LAST:event_btnVolverAtrasActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(EstadisticasClientela.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(EstadisticasClientela.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(EstadisticasClientela.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(EstadisticasClientela.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new EstadisticasClientela().setVisible(true);
            }
        });
    }

    public void paint(Graphics g) {
        super.paint(g);

        //CLIENTELA REINCIDENTE
        int totalClientela = reincidentes + noReincidentes;

        if (totalClientela > 0) {
            int grados_reincidentes = reincidentes * 360 / totalClientela;
            int grados_noReincidentes = noReincidentes * 360 / totalClientela;

            int porcentaje_reincidentes = reincidentes * 100 / totalClientela;
            int porcentaje_noReincidentes = noReincidentes * 100 / totalClientela;

            g.setColor(new Color(255, 0, 0));
            g.fillArc(25, 150, 300, 300, 0, grados_reincidentes);
            g.fillRect(375, 260, 20, 20);
            g.drawString("Reincidentes: " + porcentaje_reincidentes + "%", 400, 275);

            g.setColor(new Color(0, 130, 0));
            g.fillArc(25, 150, 300, 300, grados_reincidentes, grados_noReincidentes);
            g.fillRect(375, 300, 20, 20);
            g.drawString("No reincidentes: " + porcentaje_noReincidentes + "%", 400, 315);
        } else {
            g.drawString("No hay datos suficientes para mostrar.", 25, 80);
        }
        
        
        
        //CLIENTELA POR MES

    }


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JPanel PanelFondo;
    private javax.swing.JButton btnVolverAtras;
    private javax.swing.JLabel textClientela;
    private javax.swing.JLabel txtVolverAtras;
    // End of variables declaration//GEN-END:variables
    int reincidentes;
    int noReincidentes;
}
